#include <LiquidCrystal.h>
#define LedVerde 13
#define LedVermelho 8
int seconds = 0;
int aleatorio;
int seqLeds[10];
int leds[] = {LedVerde, LedVermelho};
volatile bool inicio = LOW;

LiquidCrystal lcd(12, 11, 7, 6, 5, 4);
void setup()
{  
  attachInterrupt(digitalPinToInterrupt(2), btEsquerdo, FALLING);
  pinMode(2, INPUT_PULLUP);
  pinMode(10, INPUT_PULLUP);
  pinMode(9, INPUT_PULLUP);
  pinMode(3, OUTPUT);
  pinMode(LedVerde, OUTPUT);
  pinMode(LedVermelho, OUTPUT);
  lcd.begin(16, 2);

  Serial.begin(9600);
}

void somInicio(){
	tone(3, 392);  // Sol
	delay(200);
	tone(3, 440);  // Lá
	delay(200);
	tone(3, 523);  // Dó
    delay(400);
	noTone(3);
}
void somErro(){
	tone(3, 523);  // Dó
	delay(400);
	tone(3, 466);  // Si bemol
	delay(400);
	tone(3, 392);  // Sol
	delay(500);
	tone(3, 349);  // Fá
	delay(600);
	noTone(3);
}
void somAcertoLed(){
	tone(3, 523);  // Dó
	delay(200);
	tone(3, 659);  // Mi
	delay(200);
	tone(3, 784);  // Sol
	delay(400);
	noTone(3);
}

void somAcertoFase1(){
  	tone(3, 523);  // Dó
	delay(300);
    tone(3, 659);  // Mi
	delay(300);
	tone(3, 784);  // Sol
	delay(500);
	tone(3, 659);  // Mi
	delay(500);
	noTone(3);
    delay(1000);
}
void somFinalJogo(){
	tone(3, 523);  // Dó
	delay(300);
	tone(3, 659);  // Mi
	delay(300);
	tone(3, 784);  // Sol
	delay(300);
	tone(3, 1046); // Dó (uma oitava acima)
	delay(500);
	tone(3, 784);  // Sol
	delay(300);
	tone(3, 659);  // Mi
	delay(300);
	tone(3, 523);  // Dó
	delay(500);
	noTone(3);
}

const char* perguntas[] = {
    "Uno tem conexão Wi-Fi",                // Não
    "Possui Bluetooth integrado?",          // Não
    "Suporta 12V pela porta USB",           // Não
    "Programado em Python por padrão",      // Não
    "Uno possui 64KB de RAM",               // Não
    "Fótons têm massa em repouso?",         // Não
    "Som pode viajar no vácuo?",            // Não
    "Vulcões nunca são frios",              // Não
    "Luz é uma partícula sempre?",          // Não
    "Oxigênio está em Marte?",              // Não
  //
    "Uno tem 14 pinos digitais",            // Sim
    "Arduino usa C++ como base",            // Sim
    "Possui EEPROM para dados",              // Sim
    "Roda a 16MHz de frequência",            // Sim
    "Tem ADC com 10 bits de resolução",     // Sim
    "Vidro é classificado como sólido",     // Sim
    "Relâmpago é uma forma de plasma",      // Sim
    "Luz é uma onda eletromagnética",       // Sim
    "DNA armazena informação genética",      // Sim
    "Cobre conduz eletricidade bem"         // Sim
};


void geraListaSeqAle(int *lista, int tamanho, int minIntervalo, int maxIntervalo){
  for(int i=0; i < tamanho; i++){
    aleatorio = random(minIntervalo, maxIntervalo);
    lista[i] = aleatorio;
  }
}

void sequenciaLed(){
  for(int i=0; i < 10; i++){
    piscaLed(leds[seqLeds[i]], 500);
    delay(500);
  }
}

int verificaMod1(){
  int apertado=0;
  int iterador=0;
  while(iterador < 10){
    if(!digitalRead(10)){
      if(!verificaBotaoMod1(0,LedVerde,iterador)){
      	return 0;
      }
      somAcertoLed();
      iterador++;
    }
    else if(!digitalRead(9)){
      if(!verificaBotaoMod1(1,LedVermelho,iterador)){
      	return 0;
      }
      somAcertoLed();
      iterador++;
    }
    delay(100);
  }
  return 1;
}

int verificaBotaoMod1(int apertado, int led, int iterador){
  piscaLed(led, 150);
  if (!verificaSeq(apertado, iterador)){
    mensagemResultMod1(iterador, "Errou");
    delay(1000);
    return 0;
  } else{
    mensagemResultMod1(iterador, "Acertou");
    return 1;
  }
}

void piscaLed(int led, int tempo){
  digitalWrite(led, 1);
  delay(tempo);
  digitalWrite(led, 0);
}

void mensagemResultMod1(int iterador, String resultado){
  char mensagem[13];
  lcd.clear();
  sprintf(mensagem, "Sequencia: %d", iterador+1);
  lcd.setCursor(0,0);
  lcd.print(mensagem);
  lcd.setCursor(0,1);
  lcd.print(resultado);
}

int verificaSeq(int verifica, int iterador){
  if(verifica == seqLeds[iterador]){
    return 1;
  }
  else {
    return 0;
  }
}

int modulo1(){
  lcd.clear();
  lcd.setCursor(0,0);
  lcd.print("Memorize as");
  lcd.setCursor(0,1);
  lcd.print("cores dos LEDs");
  delay(1000);
  geraListaSeqAle(seqLeds, 10, 0, 2);
  sequenciaLed();
  lcd.clear();
  lcd.print("Agora repita");
  lcd.setCursor(0,1);
  lcd.print("a sequencia");
  if(verificaMod1()){
    return 1;
  }else{
    return 0;
  }
}

void reiniciar(){
  noInterrupts();
  lcd.clear();
  lcd.setCursor(0,0);
  lcd.print("Reiniciando o");
  lcd.setCursor(0,1);
  lcd.print("jogo");
  digitalWrite(LedVermelho, 0);
  digitalWrite(LedVerde, 0);
  interrupts();
  somErro();
  delay(1000);
  lcd.clear();
  asm volatile ("  jmp 0");
}

void btEsquerdo(){
  inicio = !inicio;
  if(inicio){
    loop();
  }else{
    reiniciar();
  }
}

void iniciar(){
	lcd.clear();
    lcd.print("Iniciando o jogo");
    somInicio();
    delay(1000);
    if(modulo1()){
        lcd.clear();
        lcd.print("Parabens!");
        somAcertoFase1();
      	inicio = LOW;
      	delay(1000);
        
      	
    }else{
        reiniciar();
    }
}

void loop()
{
  noInterrupts();
  lcd.setCursor(0,0);
  lcd.print("Seja Bem vindo");
  lcd.setCursor(0,1);
  lcd.print("Pressione inicia");
  interrupts();
  if (inicio){
  	iniciar();
  }
}
